<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2006

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce 2006 Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tc2="testcaselist2.data.report.view.bi" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="xs tc2 fn">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:key name="elementNameId" match="/tc2:ReportTestCases/Element/Name" use="../Id"/>
	<xsl:key name="equivalenceClassValueId" match="/tc2:ReportTestCases/Element/EquivalenceClass/Value" use="../@UniqueId"/>
		<xsl:key name="equivalenceClassDescriptionId" match="/tc2:ReportTestCases/Element/EquivalenceClass/Description" use="../@UniqueId"/>

	<xsl:key name="equivalenceClassEffectId" match="/tc2:ReportTestCases/Element/EquivalenceClass/CauseEffects/CauseEffect" use="../../@UniqueId"/>
	<xsl:template match="/tc2:ReportTestCases">
		<QACenterImport>
			<CaseMakerInfo>
				<xsl:for-each select="CMVersion">
					<CurrentVersion>
						<xsl:value-of select="."/>
					</CurrentVersion>
				</xsl:for-each>
			</CaseMakerInfo>
			<ProjectInfo>
				<xsl:for-each select="Project">
					<xsl:for-each select="Name">
						<Name>
							<xsl:value-of select="."/>
						</Name>
					</xsl:for-each>
				</xsl:for-each>
				<xsl:for-each select="TestObject">
					<xsl:for-each select="Name">
						<TestObject>
							<xsl:value-of select="."/>
						</TestObject>
					</xsl:for-each>
				</xsl:for-each>
				<xsl:for-each select="Date">
					<Date>
						<xsl:value-of select="."/>
					</Date>
				</xsl:for-each>
				<xsl:for-each select="UserName">
					<User>
						<xsl:value-of select="."/>
					</User>
				</xsl:for-each>
			</ProjectInfo>
			<TestCases>
				<xsl:for-each select="TestCase">
					<TestCase>
						<subject>
								<xsl:value-of select="/tc2:ReportTestCases/WorkSpace/Name"/>
								<xsl:text>\</xsl:text>
								<xsl:value-of select="/tc2:ReportTestCases/Project/Name"/>
								<xsl:text>\</xsl:text>
								<xsl:value-of select="/tc2:ReportTestCases/TestObject/Name"/>
						</subject>
						<xsl:for-each select="Name">
							<TestName>
								<xsl:value-of select="."/>
							</TestName>
						</xsl:for-each>
						<xsl:for-each select="Description">
							<Description>
								<xsl:value-of select="."/>
							</Description>
						</xsl:for-each>
						<xsl:for-each select="State">
							<Status>
								<xsl:value-of select="."/>
							</Status>
						</xsl:for-each>
						<xsl:for-each select="RiskLevel">
							<RiskLevel>
								<xsl:value-of select="."/>
							</RiskLevel>
						</xsl:for-each>
						<xsl:for-each select="./ElementReference">
							<xsl:variable name="EId" select="@Id"/>
							<Step>
							<StepNo>
									<xsl:value-of select="position()"/>
							</StepNo>
							<FieldName>
									<xsl:value-of select="key(&apos;elementNameId&apos;,$EId)"/>
							</FieldName>
							<Description>
									<xsl:for-each select="../EqClassReference [@ElementId=$EId]">
										<xsl:variable name="EqId" select="@UniqueId"/>
										<xsl:value-of select="key(&apos;equivalenceClassDescriptionId&apos;,$EqId)"/>	
									</xsl:for-each>
							</Description>
							<Value>
								<xsl:for-each select="../EqClassReference [@ElementId=$EId]">
									<xsl:variable name="EqId" select="@UniqueId"/>
							 		<xsl:value-of select="key(&apos;equivalenceClassValueId&apos;,$EqId)"/>	
								</xsl:for-each>
							</Value>
							<xsl:for-each select="../EqClassReference [@ElementId=$EId]">
									<xsl:variable name="EqId" select="@UniqueId"/>
									<xsl:for-each select="key(&apos;equivalenceClassEffectId&apos;,$EqId)">
									<ExpectedResult>
										<Text>
											<xsl:value-of select="./Description"/>
										</Text>
										<xsl:for-each select="./ExpectedResult">
											<Question>
												<xsl:value-of select="./Name"/>
											</Question>
											<Type>
												<xsl:value-of select="./DataType"/>
											</Type>
											<CorrectAnswer>
											<xsl:value-of select="./Value"/>
											</CorrectAnswer>
										</xsl:for-each>
									</ExpectedResult>
									</xsl:for-each>
							</xsl:for-each>
							</Step>
						</xsl:for-each>
					</TestCase>
				</xsl:for-each>
			</TestCases>
		</QACenterImport>
	</xsl:template>
</xsl:stylesheet>
