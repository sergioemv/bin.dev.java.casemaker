/* Generated by Together */

package bi.view.testdataviews;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import model.TDStructure;
import model.TestCase;
import model.TestData;
import model.TestDataSet;
import bi.view.lang.CMMessages;
import bi.view.mainframeviews.CMFrameView;
import bi.view.utils.JCustomDialog;
/**
 * @deprecated
 * @author hcanedo
 *
 */
public class CMDialogCreateEditTestDataSet extends JCustomDialog {
    public CMDialogCreateEditTestDataSet(CMFrameView p_CMFrameView, TestDataSet p_TestDataSet, String p_title) {
        super(p_CMFrameView);
        m_CMFrameView = p_CMFrameView;
        m_TestDataSet = p_TestDataSet;
        m_Selecteds = m_TestDataSet.getM_TestDataCombinations().getM_TestDatas();
        m_availables = (Vector)p_CMFrameView.getPanelTDStructureView().getTDStructure().getTestDataCombination().getM_TestDatas().clone(); //
        m_title = p_title;
        initGUI();
    }
//hcanedo_21102004_begin
    public void initGUI() {
        jScrollPaneDescription.setBounds(new java.awt.Rectangle(41, 70, 360, 76));
        jScrollPaneDescription.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),
        CMMessages.getString("TESTDATA_DESCRIPTION_TESTDATASET"), javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 11),
        new java.awt.Color(60, 60, 60)));
        jLabelName.setText(CMMessages.getString("TESTDATA_NAME_TESTDATASET")); //$NON-NLS-1$
        jLabelName.setBounds(new java.awt.Rectangle(43, 44, 47, 16));
        jLabelName.setFont(new java.awt.Font("SansSerif", java.awt.Font.PLAIN, 11)); //$NON-NLS-1$
        jTextFieldName.setText(""); //$NON-NLS-1$
        jTextFieldName.setBounds(new java.awt.Rectangle(109, 42, 108, 20));
        jTextFieldName.setEditable(false);
//$NON-NLS-1$
//$NON-NLS-1$
        getContentPane().add(jPanelTestDataSet, java.awt.BorderLayout.CENTER);
        setBounds(new java.awt.Rectangle(0, 0, 461, 470));
        setTitle(m_title);
        jPanelTestDataSet.setLayout(null);
        jPanelTestDataSet.setPreferredSize(new java.awt.Dimension(457, 350));
        jPanelTestDataSet.add(jPanelProperties);
        jPanelTestDataSet.add(jPanelAssignTestData);
        jPanelTestDataSet.add(jButtonOk);
        jPanelTestDataSet.add(jButtonCancel);
        jTextAreaDescription.setText(""); //$NON-NLS-1$
        jTextAreaDescription.setBounds(new java.awt.Rectangle(279, 14, 53, 16));
        jTextAreaDescription.setWrapStyleWord(true);
        jTextAreaDescription.setLineWrap(true);
        jScrollPaneDescription.getViewport().add(jTextAreaDescription);
        jPanelProperties.setBounds(new java.awt.Rectangle(9, 12, 437, 161));
        jPanelProperties.setLayout(null);
        jPanelProperties.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),
            CMMessages.getString("TESTDATA_PROPERTIES_TESTDATASET"), javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, //$NON-NLS-1$
            new java.awt.Font("SansSerif", 0, 11), new java.awt.Color(60, 60, 60))); //$NON-NLS-1$
        jPanelProperties.add(jTextFieldName);
        jPanelProperties.add(jLabelName);
        jPanelProperties.add(jScrollPaneDescription);
        jPanelAssignTestData.setBounds(new java.awt.Rectangle(10, 178, 434, 211));
        jPanelAssignTestData.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),
            CMMessages.getString("TESTDATA_ASSIGN_TESTDATA_TO_TESTDATASET"),
            javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, //$NON-NLS-1$
        new java.awt.Font("SansSerif", 0, 11), new java.awt.Color(60, 60, 60))); //$NON-NLS-1$
        jPanelAssignTestData.setLayout(null);
        jPanelAssignTestData.add(jScrollPaneAvailable);
        jPanelAssignTestData.add(jScrollPaneSelected);
        jPanelAssignTestData.add(jButtonAdd);
        jPanelAssignTestData.add(jButtonDelete);
        jScrollPaneAvailable.setBounds(new java.awt.Rectangle(43, 26, 131, 165));
        jScrollPaneSelected.setBounds(new java.awt.Rectangle(268, 26, 130, 165));
        jScrollPaneAvailable.getViewport().add(jListAvailable);
        jListAvailable.setBounds(new java.awt.Rectangle(84, 66, 32, 32));
        jListAvailable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPaneSelected.getViewport().add(jListSelected);
        jListSelected.setBounds(new java.awt.Rectangle(56, 86, 32, 32));
        jListSelected.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jButtonAdd.setText(">>"); //$NON-NLS-1$
        jButtonAdd.setBounds(new java.awt.Rectangle(184, 65, 73, 27));
        jButtonDelete.setText("<<"); //$NON-NLS-1$
        jButtonDelete.setBounds(new java.awt.Rectangle(184, 112, 73, 27));
        jButtonOk.setText(CMMessages.getString("BUTTON_OK")); //$NON-NLS-1$
        jButtonOk.setBounds(new java.awt.Rectangle(137, 405, 73, 27));
        jButtonCancel.setText(CMMessages.getString("BUTTON_CANCEL")); //$NON-NLS-1$
        jButtonCancel.setBounds(new java.awt.Rectangle(249, 406, 73, 27));
        jButtonAdd.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent e) { jButtonAddActionPerformed(e); }
            });
        jButtonDelete.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent e) { jButtonDeleteActionPerformed(e); }
            });
        jButtonOk.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent e) { jButtonOkActionPerformed(e); }
            });
        jButtonCancel.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent e) { jButtonCancelActionPerformed(e); }
            });
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dlgSize = this.getPreferredSize();
        Point loc = getLocation();
        this.setLocation((screenSize.width - dlgSize.width) / 2, (screenSize.height - dlgSize.height) / 2);
        setModal(true);
//hcanedo_21_09_2004_begin
        setResizable(false);
//hcanedo_21_09_2004_end
        charge();
    }
//hcanedo_21102004_end
//hcanedo_20_09_2004_begin
    private void createVectorsToLists(Vector availables, Vector selecteds) {
        for (int i = 0; i < m_Selecteds.size(); i++) {
            TestData testDataAux = (TestData)m_Selecteds.elementAt(i);
            StringBuffer name =new StringBuffer(testDataAux.getName());
            String nameTestCase="";
            try{
                   	 nameTestCase=testDataAux.getM_TestCaseinTestData();
            }
            catch(Exception ex)
            {
                  nameTestCase="";
            }
            String result="0";
			TDStructure testData=m_CMFrameView.getGridTDStructure().getTDStructure();
            for(int j=0; j<testData.getM_TestObject().getStructure().getLnkTestCases().size();j++)
            {
                  	TestCase testCase = ((TestCase)testData.getM_TestObject().getStructure().getLnkTestCases().elementAt(j));
//hcanedo_21102004_begin
					String nameTestCaseAndState=testCase.getName()+testCase.getStateName();
                     if(nameTestCase.equals(nameTestCaseAndState))
//hcanedo_21102004_end
                     {
						result=Integer.toString(testCase.getRiskLevel());
                     }
            }
			name.append(" ");
            name.append(CMMessages.getString("TESTDATASET_RISKLEVEL_LABEL"));
            name.append(" ");
            name.append(result);
            selecteds.addElement(name.toString());
            boolean b = m_availables.removeElement(m_Selecteds.elementAt(i));
        }
        for (int j = 0; j < m_availables.size(); j++) {
            TestData testDataAux = (TestData)m_availables.elementAt(j);
            StringBuffer name= new StringBuffer();
            if (testDataAux.isSet()) {
                name.append(testDataAux.getName() + "  *");
            }
            else {
                name.append(testDataAux.getName());
            }
            String nameTestCase="";
            try{
                   	 nameTestCase=testDataAux.getM_TestCaseinTestData();
            }
            catch(Exception ex)
            {
                  nameTestCase="";
            }
            String result="0";
			TDStructure testData=m_CMFrameView.getGridTDStructure().getTDStructure();
            for(int i=0; i<testData.getM_TestObject().getStructure().getLnkTestCases().size();i++)
            {
                  	TestCase testCase = ((TestCase)testData.getM_TestObject().getStructure().getLnkTestCases().elementAt(i));
//hcanedo_21102004_begin
					String nameTestCaseAndState=testCase.getName()+testCase.getStateName();
                     if(nameTestCase.equals(nameTestCaseAndState))
//hcanedo_21102004_end
                     {
						result=Integer.toString(testCase.getRiskLevel());
                     }
            }
			name.append(" ");
            name.append(CMMessages.getString("TESTDATASET_RISKLEVEL_LABEL"));
            name.append(" ");
            name.append(result);
            availables.addElement(name);
        }
    }
//hcanedo_20_09_2004_end
    private void charge() {
        jTextFieldName.setText(m_TestDataSet.getName());
        jTextAreaDescription.setText(m_TestDataSet.getDescription());
        jTextAreaDescription.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        createVectorsToLists(availables, selecteds);
        cancelSelected = (Vector)m_Selecteds.clone();
        cancelAvailables = (Vector)m_availables.clone();
        jListAvailable.setListData(availables);
        jListSelected.setListData(selecteds);
    }

    public void jButtonAddActionPerformed(ActionEvent e) {
        int indexs[] = jListAvailable.getSelectedIndices();
        for (int i = 0; i < Array.getLength(indexs); i++) {
            int index = Array.getInt(indexs, i);
            selecteds.addElement(availables.elementAt(index));
            m_Selecteds.addElement(m_availables.elementAt(index));
            // availables.removeElementAt(index);
            //m_availables.removeElementAt(index);
        }
        for (int i = Array.getLength(indexs) - 1; i >= 0; i--) {
            int index = Array.getInt(indexs, i);
            //  selecteds.addElement(availables.elementAt(index));
            //  m_Selecteds.addElement(m_availables.elementAt(index));
            availables.removeElementAt(index);
            m_availables.removeElementAt(index);
        }
        jListAvailable.setListData(availables);
        jListAvailable.revalidate();
        jListSelected.setListData(selecteds);
        jListSelected.revalidate();

       /* int index = jListAvailable.getSelectedIndex();
        if (index >= 0) {
            //TestData td = (TestData)m_availables.elementAt(index);
            //td.setContTestDataSet(td.getContTestDataSet() + 1);
            selecteds.addElement(availables.elementAt(index));
            m_Selecteds.addElement(m_availables.elementAt(index));
            availables.removeElementAt(index);
            m_availables.removeElementAt(index);
            jListAvailable.setListData(availables);
            jListAvailable.revalidate();
            jListSelected.setListData(selecteds);
            jListSelected.revalidate();
        }*/
    }

    public void jButtonDeleteActionPerformed(ActionEvent e) {
        int indexs[] = jListSelected.getSelectedIndices();
        for (int i = 0; i < Array.getLength(indexs); i++) {
            int index = Array.getInt(indexs, i);
            availables.addElement(selecteds.elementAt(index));
            m_availables.addElement(m_Selecteds.elementAt(index));
        }
        for (int i = Array.getLength(indexs) - 1; i >= 0; i--) {
            int index = Array.getInt(indexs, i);
            selecteds.removeElementAt(index);
            m_Selecteds.removeElementAt(index);
        }
        jListAvailable.setListData(availables);
        jListAvailable.revalidate();
        jListSelected.setListData(selecteds);
        jListSelected.revalidate();

        /*int index = jListSelected.getSelectedIndex();
        if (index >= 0) {
            //TestData td = (TestData)m_Selecteds.elementAt(index);
            //td.setContTestDataSet(td.getContTestDataSet() - 1);
            availables.addElement(selecteds.elementAt(index));
            m_availables.addElement(m_Selecteds.elementAt(index));
            selecteds.removeElementAt(index);
            m_Selecteds.removeElementAt(index);
            jListAvailable.setListData(availables);
            jListAvailable.revalidate();
            jListSelected.setListData(selecteds);
            jListSelected.revalidate();
        }*/
    }

    public void jButtonOkActionPerformed(ActionEvent e) {
        for (int i = 0; i < m_Selecteds.size(); i++) {
            TestData td = (TestData)m_Selecteds.elementAt(i);
            if (!cancelSelected.contains(td)) {
                td.setContTestDataSet(td.getContTestDataSet() + 1);
                td.setSet(true);
            }
        }
        for (int i = 0; i < m_availables.size(); i++) {
            TestData td = (TestData)m_availables.elementAt(i);
            if (!cancelAvailables.contains(td)) {
                td.setContTestDataSet(td.getContTestDataSet() - 1);
                if (td.getContTestDataSet() == 0)
                    td.setSet(false);
            }
        }
        m_TestDataSet.getM_TestDataCombinations().setM_TestDatas(m_Selecteds);
        String oldDescription =m_TestDataSet.getDescription();
        m_TestDataSet.setDescription(jTextAreaDescription.getText());
 //hcanedo_23082004_begin
//hcanedo_21_09_2004_begin
 		if(m_Selecteds.size()!=0 && m_title.equals(CMMessages.getString("TESTDATA_EDIT_TESTDATASET")))
//hcanedo_21_09_2004_end
			m_CMFrameView.getM_CMUndoMediator().editTestDataSetAt(m_CMFrameView.getGridTDStructure(), (Vector)m_Selecteds.clone(),jTextAreaDescription.getText(),(Vector)cancelSelected.clone(),oldDescription,CMIndexTDStructureUpdate.getInstance().getindexTestDataSet(), m_CMFrameView.getContentTabbedPane(),CMMessages.getString("TESTDATA_TESTDATASET"));
//hcanedo_23082004_end
        selectedOk = true;
        dispose();
    }

    public void jButtonCancelActionPerformed(ActionEvent e) {
        m_availables = cancelAvailables;
        m_Selecteds = cancelSelected;
        m_TestDataSet.getM_TestDataCombinations().setM_TestDatas(m_Selecteds);
        dispose();
    }

    private Vector cancelAvailables = new Vector();
    private Vector cancelSelected = new Vector();
    private Vector availables = new Vector();
    private Vector selecteds = new Vector();
    private Vector m_Selecteds;
    private Vector m_availables;
    private CMFrameView m_CMFrameView;
    private TestDataSet m_TestDataSet;
    private String m_title;
    private JPanel jPanelTestDataSet = new JPanel();
    private JScrollPane jScrollPaneDescription = new JScrollPane();
    private JTextArea jTextAreaDescription = new JTextArea();
    private JPanel jPanelProperties = new JPanel();
    private JTextField jTextFieldName = new JTextField();
    private JLabel jLabelName = new JLabel();
    private JPanel jPanelAssignTestData = new JPanel();
    private JScrollPane jScrollPaneAvailable = new JScrollPane();
    private JScrollPane jScrollPaneSelected = new JScrollPane();
    private JList jListAvailable = new JList();
    private JList jListSelected = new JList();
    private JButton jButtonAdd = new JButton();
    private JButton jButtonDelete = new JButton();
    private JButton jButtonOk = new JButton();
    private JButton jButtonCancel = new JButton();
    public boolean selectedOk = false;
	protected List getOrder() {
		List focusOrder= new ArrayList();
		
		return focusOrder;
	}
	protected void PressJButtonCancel(Object object) {
		jButtonCancelActionPerformed(null);
		
	}
	protected void PressJButtonOk(Object object) {
		jButtonOkActionPerformed(null);
	}
}
