/* Generated by Together */

package bi.view.testdataviews;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JViewport;

import model.ITypeData;
import model.StructureTestData;
import model.TDStructure;
import model.TestData;
import model.TestDataCombinations;
import model.TestDataFormat;
import bi.view.mainframeviews.CMFrameView;


@SuppressWarnings("serial")
public class CMPanelTestDataView extends JPanel {
	
    public CMPanelTestDataView(CMFrameView p_Frame) {
        m_Frame = p_Frame;
        m_CMScrollPaneTestDataCombinationsDescription = new CMScrollPaneTestDataCombinationsDescription(p_Frame);
        m_CMScrollpaneStructureDescription = new CMScrollpaneStructureDescription(p_Frame);       
        m_CMGridTDStructure = new CMGridTDStructure(m_Frame);    
       
        initGUI();
    }

    public void initGUI() {
        setLayout(new java.awt.BorderLayout());
        setBorder(null);
        add(jSplitPaneTestData, java.awt.BorderLayout.CENTER);
        jSplitPaneTestData.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPaneTestData.setDividerLocation(150);
        jSplitPaneTestData.setDividerSize(6);
        jSplitPaneTestData.add(jSplitPaneStructure, javax.swing.JSplitPane.BOTTOM);
        jSplitPaneStructure.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPaneStructure.setDividerLocation(150);
        jSplitPaneTestData.add(m_CMScrollPaneTestDataCombinationsDescription, javax.swing.JSplitPane.TOP);
        jSplitPaneStructure.add(m_CMScrollpaneStructureDescription, javax.swing.JSplitPane.TOP); 
        
        jSplitPaneStructure.add(m_jScrollPaneGridStructure, javax.swing.JSplitPane.BOTTOM);
        
        m_jScrollPaneGridStructure.setViewportView(m_CMGridTDStructure);  
       
        if (m_CMGridTDStructure!= null){
        	if ( m_CMGridTDStructure.getViewport1() != null);
            	m_CMGridTDStructure.getViewport1().setScrollMode(JViewport.BACKINGSTORE_SCROLL_MODE);      
        }
         
       
        
      
        m_jScrollPaneGridStructure.addMouseListener(
            new MouseAdapter() {
                public void mouseClicked(MouseEvent e) { m_jScrollPaneGridStructureMouseClicked(e); }
            });
        
    }

    public TestDataCombinations getM_TestDataCombinations() { return m_TestDataCombinations; }

    public void setM_TestDataCombinations(TestDataCombinations m_TestDataCombinations) {
        this.m_TestDataCombinations = m_TestDataCombinations;
        this.m_CMScrollPaneTestDataCombinationsDescription.setM_TestDataCombinations(m_TestDataCombinations);
        if (m_TestDataCombinations.getM_TestDatas().size() != 0) {
            this.m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)
                m_TestDataCombinations.getM_TestDatas().elementAt(0)).getM_TDStructure()); //verificar
            m_CMGridTDStructure.setTDStructure(((TestData)
                m_TestDataCombinations.getM_TestDatas().elementAt(0)).getM_TDStructure());
        }
    }

    public void deleteUpdate() {
        CMIndexTDStructureUpdate.getInstance().setindex(CMIndexTDStructureUpdate.getInstance().getIndex() - 1);
        if (m_TestDataCombinations.getM_TestDatas().size() != 0) {
        	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(CMIndexTDStructureUpdate.getInstance().getindexTestData())).getM_TDStructure());
        	m_CMGridTDStructure.update(CMIndexTDStructureUpdate.getInstance().getIndex());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(CMIndexTDStructureUpdate.getInstance().getindexTestData())).getM_TDStructure());
            m_CMScrollpaneStructureDescription.update();
            m_CMScrollPaneTestDataCombinationsDescription.update();
        }
        else {
        	m_CMGridTDStructure.deleteAllViews();
            m_CMScrollPaneTestDataCombinationsDescription.deleteAllViews();
            m_CMScrollpaneStructureDescription.deleteAllViews();
        }
    }

    public void update() {
        if (m_TestDataCombinations.getM_TestDatas().size() != 0) {
            if (m_TestDataCombinations.getM_TestDatas().size() == CMIndexTDStructureUpdate.getInstance().getindexTestData())
                CMIndexTDStructureUpdate.getInstance().setindexTestData(CMIndexTDStructureUpdate.getInstance().getindexTestData() - 1);
            m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(CMIndexTDStructureUpdate.getInstance().getindexTestData())).getM_TDStructure());
           
            m_CMGridTDStructure.update(CMIndexTDStructureUpdate.getInstance().getIndex());            
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(CMIndexTDStructureUpdate.getInstance().getindexTestData())).getM_TDStructure());
            m_CMScrollpaneStructureDescription.update();
            m_CMScrollPaneTestDataCombinationsDescription.update();
            this.repaint();
        }
        else {
        	
        	m_CMGridTDStructure.deleteAllViews();        	
        	m_CMGridTDStructure.setTDStructure(new TDStructure()); 
        	if (m_Frame.isIsPanelTestDataSelected())
        		m_CMGridTDStructure.update(0);        	
        	m_CMGridTDStructure.revalidateMenusAfterAnyAction();
            m_CMScrollPaneTestDataCombinationsDescription.deleteAllViews();
            m_CMScrollpaneStructureDescription.deleteAllViews();
        }
    }

    public void update2() {
        if (m_TestDataCombinations.getM_TestDatas().size() != 0) {
            if (m_TestDataCombinations.getM_TestDatas().size() == CMIndexTDStructureUpdate.getInstance().getindexTestData())
                CMIndexTDStructureUpdate.getInstance().setindexTestData(CMIndexTDStructureUpdate.getInstance().getindexTestData() - 1);
            m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(CMIndexTDStructureUpdate.getInstance().getindexTestData())).getM_TDStructure());
             m_CMGridTDStructure.update(CMIndexTDStructureUpdate.getInstance().getIndex());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(CMIndexTDStructureUpdate.getInstance().getindexTestData())).getM_TDStructure());
            m_CMScrollpaneStructureDescription.update();
            // m_CMScrollPaneTestDataCombinationsDescription.update();
        }
        else {
        	m_CMGridTDStructure.deleteAllViews();
            m_CMScrollPaneTestDataCombinationsDescription.deleteAllViews();
            m_CMScrollpaneStructureDescription.deleteAllViews();
        }
    }

    public void updateStructure() {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(CMIndexTDStructureUpdate.getInstance().getindexTestData())).getM_TDStructure());
    	m_CMGridTDStructure.update(CMIndexTDStructureUpdate.getInstance().getIndex());
    }

    public void setGlovalValue(String value, int table, int row, int col) {
    	m_CMGridTDStructure.setGlobalValue(value, table, row, col);
    }

    public void setM_CMGridTDStructure(CMGridTDStructure p_CMGridTDStructure) {
        m_CMGridTDStructure = p_CMGridTDStructure;
    }//cc

    public CMGridTDStructure getM_CMTDStructure() {
        return m_CMGridTDStructure;
    }
//svonborries_06032006_begin
    public int cancelGlobalValueReferenceInTestData() {
        return m_CMGridTDStructure.cancelGlobalValueReferenceInTestData();
    }
//  svonborries_06032006_end

    //fcastro_01092004_begin
    public CMScrollpaneStructureDescription getM_CMScrollpaneStructureDescription() {
        return m_CMScrollpaneStructureDescription;
    }

    //fcastro_01092004_end
    public void update(int p_IndexTestData, int p_indexStructure) {
        try {
        	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
        	//cc m_CMGridTDStructure.update(p_indexStructure);
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMScrollpaneStructureDescription.update(p_indexStructure);
            m_CMScrollPaneTestDataCombinationsDescription.update(p_IndexTestData);
        }
        catch (Exception ex) {
            update();
        }
    }

    public void changeStructureDescriptionInTestData(int p_IndexTestData, int p_indexStructure, String p_Description,
        String p_Type, StructureTestData p_StructureTestData) {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMGridTDStructure.changeStructureTestDataDescription(p_indexStructure, p_Description,
                p_Type, p_StructureTestData);
            update(p_IndexTestData, p_indexStructure);
    }

    public void changeValuesInGridStructureInTestData(int p_IndexTestData, int p_indexStructure, Object p_editingObject,
        String p_value, int p_row, int p_column) {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMGridTDStructure.changeValuesInGridTDstructure(p_editingObject, p_indexStructure, p_value, p_row, p_column);
            update(p_IndexTestData, p_indexStructure);
    }

    public int undoGlobalReferenceinTestData(int p_IndexTestData, int p_indexStructure, int p_row,
        int p_column, ITypeData p_TypeData) {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            int result = m_CMGridTDStructure.undoSetGlobalinTDSTructure(p_row, p_column, p_indexStructure, p_TypeData);
            update(p_IndexTestData, p_indexStructure);
            return result;
    }

    public void redoGLobalReference(int p_IndexTestData, int p_indexStructure, int p_row, int p_column,
        int p_index, ITypeData p_typ) {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMGridTDStructure.redoGlobalReferenceValuesinTestData(p_row, p_column, p_index, p_typ);
            update(p_IndexTestData, p_indexStructure);
    }

     public void undoRedoInValidGlobalAndFormulaInTestData(int p_IndexTestData, int p_indexStructure, int p_row, int p_column,
        int p_index, ITypeData p_typ) {
    	 m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMGridTDStructure.undoRedoInValidGlobalAndFormulaInTestData(p_row, p_column, p_index, p_typ);
            update(p_IndexTestData, p_indexStructure);
    }

    public ITypeData getTypeData(int numoftable, int numofrow, int numofcol) {
        return m_CMGridTDStructure.getTypeData(numoftable, numofrow, numofcol);
    }

    public void setTypeData(int numoftable, int numofrow, int numofcol, ITypeData p_TypeData, int p_IndexTestData,
        int p_indexStructure) {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMGridTDStructure.setTypeData(numoftable, numofrow + 1, numofcol, p_TypeData);
            update(p_IndexTestData, p_indexStructure);
    }

    /**
     * @param p_IndexTestData
     * @param p_indexStructure
     * @param p_row
     * @param p_column
     * @author svonborries
     * @version: Modify to be adapted to the new model of Undo/Redo
     */
    public void undoredoSetFormula(int p_IndexTestData, int p_indexStructure, int p_row, int p_column) {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMGridTDStructure.redosetFormula(p_row, p_column, p_indexStructure);
            update(p_IndexTestData, p_indexStructure);
    }

    public void undoredoSetVariable(int p_IndexTestData, int p_indexStructure, int p_row, int p_column, String formula,
        String value, String type, String format,TestDataFormat p_Formatter, boolean isFormula) {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
            m_CMGridTDStructure.undoRedosetVariable(p_row, p_column, p_indexStructure, formula, value,
                type, format, p_Formatter, isFormula);
            update(p_IndexTestData, p_indexStructure);
    }

    public void changeEditTestData(int p_IndexTestData, String p_Description) {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
        m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
        TestData editTD = (TestData)this.m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData);
        editTD.setDescription(p_Description);
        update(p_IndexTestData, 0);
    }

    public void undoCreateTestData(int p_IndexTestData, TestData p_Testdata) {
    	m_CMGridTDStructure.setTDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
        m_CMScrollpaneStructureDescription.setM_TDStructure(((TestData)m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData)).getM_TDStructure());
        this.m_TestDataCombinations.getM_TestDatas().removeElementAt(p_IndexTestData);
        update(p_IndexTestData - 1, 0);
    }

    public void redoCreateTestData(int p_IndexTestData, TestData p_Testdata) {
        this.m_TestDataCombinations.getM_TestDatas().addElement(p_Testdata);
        update(p_IndexTestData, 0);
    }

    public void undoRedoAssignTestCaseTestData(int p_IndexTestData, String newTestCase) {
        TestData testData = (TestData)this.m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData);
        testData.setM_TestCaseinTestData(newTestCase);
        update(p_IndexTestData, 0);
    }

    public void undoAssignStructure(int p_IndexTestData, StructureTestData p_StructureTestData) {
        TestData testData = (TestData)this.m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData);
        testData.getM_TDStructure().getM_StructureTestData().remove(p_StructureTestData);
        update(p_IndexTestData, 0);
    }

    public void redoAssignStructure(int p_IndexTestData, StructureTestData p_StructureTestData) {
        TestData testData = (TestData)this.m_TestDataCombinations.getM_TestDatas().elementAt(p_IndexTestData);
        testData.getM_TDStructure().getM_StructureTestData().addElement(p_StructureTestData);
        update(p_IndexTestData, 0);
    }

    //hcanedo_21_09_2004_begin
    public void m_jScrollPaneGridStructureMouseClicked(MouseEvent e) {
        m_Frame.eventMouseClicked(null);
    }

    //hcanedo_21_09_2004_end
    private JSplitPane jSplitPaneTestData = new JSplitPane();
    private CMFrameView m_Frame;
    private JSplitPane jSplitPaneStructure = new JSplitPane();
    private CMScrollPaneTestDataCombinationsDescription m_CMScrollPaneTestDataCombinationsDescription;
    private CMScrollpaneStructureDescription m_CMScrollpaneStructureDescription;
    private JScrollPane m_jScrollPaneGridStructure = new JScrollPane();
    private TestDataCombinations m_TestDataCombinations;
    private CMGridTDStructure m_CMGridTDStructure;
  
	public void setGlovalFormatter(TestDataFormat value,int table, int row, int col) {
		m_CMGridTDStructure.setGlobalFormatter(value, table, row, col);

	}

	/**
	 * @return Returns the m_CMScrollPaneTestDataCombinationsDescription.
	 */
	public CMScrollPaneTestDataCombinationsDescription getM_CMScrollPaneTestDataCombinationsDescription() {
		return m_CMScrollPaneTestDataCombinationsDescription;
	}

	/**
	 * @param scrollPaneTestDataCombinationsDescription The m_CMScrollPaneTestDataCombinationsDescription to set.
	 */
	public void setM_CMScrollPaneTestDataCombinationsDescription(
			CMScrollPaneTestDataCombinationsDescription scrollPaneTestDataCombinationsDescription) {
		m_CMScrollPaneTestDataCombinationsDescription = scrollPaneTestDataCombinationsDescription;
	}

	/**
	 * @return Returns the m_CMGridTDStructure.
	 */
	public CMGridTDStructure getM_CMGridTDStructure() {
		return m_CMGridTDStructure;
	}

	/**
	 * @param scrollpaneStructureDescription The m_CMScrollpaneStructureDescription to set.
	 */
	public void setM_CMScrollpaneStructureDescription(
			CMScrollpaneStructureDescription scrollpaneStructureDescription) {
		m_CMScrollpaneStructureDescription = scrollpaneStructureDescription;
	}

	/**
	 * @param m_typ
	 */
    public void setGLobalReference(ITypeData p_typ) {
    	m_CMGridTDStructure.setGlobalReferenceValuesinTestData(p_typ);
    }


	
   
}
