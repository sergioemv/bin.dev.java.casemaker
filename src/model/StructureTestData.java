/* Generated by Together */

package model;
import java.util.Vector;

import javax.swing.undo.CompoundEdit;
import javax.swing.undo.UndoableEdit;

import model.edit.CMModelEditFactory;

import bi.view.mainframeviews.CMApplication;
import bi.view.undomanagementviews.CMCompoundEdit;

public class StructureTestData {
    public StructureTestData() {
        typeData = new Vector();
        newColumnsHeader = new Vector(5);
	}

  //  public TDStructure getM_TDStructure(){ return m_TDStructure; }

  //  public void setM_TDStructure(TDStructure m_TDStructure){ this.m_TDStructure = m_TDStructure; }
	public StructureTestData clones()
    {
		StructureTestData clone = new StructureTestData();
        Vector aux=this.getTypeData();
        clone.setName(new String(this.getName()));
        clone.setDescription(this.getDescription());
        clone.setType(new String(this.getType()));
		clone.setGlobalIndex(this.getGlobalIndex());
        clone.setId(this.getId());
        int auxSize = aux.size();
        for(int i=0; i< auxSize;i++)
        {
            ITypeData newTypeData =null; //new TypeData();
            ITypeData oldTypeData = (ITypeData)aux.elementAt(i);
            if(oldTypeData instanceof TypeDataGlobal){
            	newTypeData= new TypeDataGlobal();
            }
            else{
            	newTypeData= new TypeDataLocal(); 
            	((TypeDataLocal)newTypeData).setM_ReferenceTypeData(((TypeDataLocal)oldTypeData).getM_ReferenceTypeData());
            }
            newTypeData.setField(new String(oldTypeData.getField()));
            newTypeData.setFormat(new String(oldTypeData.getFormat()));
            newTypeData.setFormatter((TestDataFormat)oldTypeData.getFormatter().clone());
            //newTypeData.setFormula(new String(oldTypeData.getStringFormula()));
            //newTypeData.setisFormula(oldTypeData.isFormula());
            newTypeData.setKey(new String(oldTypeData.getKey()));
            newTypeData.setLength(new String(oldTypeData.getLength()));
            newTypeData.setName(new String(oldTypeData.getName()));
            //My add
            if (oldTypeData.getToolVendorOT(CMApplication.frame.getTreeWorkspaceView().getCurrentTestObject())!=null)
            	//ccastedo 27.09.06  newTypeData.setToolVendorOT(new String(oldTypeData.getToolVendorOT()));
            	newTypeData.setStateOT(oldTypeData.getStateOT());
            else
            	//ccastedo 27.09.06 newTypeData.setToolVendorOT("DotNet");
            	newTypeData.setStateOT(0);

          //  newTypeData.setStateOT(oldTypeData.getStateOT());
          //  newTypeData.setTVT(oldTypeData.getTVT());
            Vector newColumns = new Vector(5);
            newTypeData.setNewColumns(newColumns);
            
            newTypeData.setPrefix(new String(oldTypeData.getPrefix()));
            newTypeData.setSuffix(new String(oldTypeData.getSuffix()));
            newTypeData.setType(new String(oldTypeData.getTypeName()));
            
            ICMValue value = (ICMValue) oldTypeData.getValue().clone();
            newTypeData.setValue(value);
            //newTypeData.setStringValue(new String(oldTypeData.getStringValue()));
            newTypeData.setGlobal(new String(oldTypeData.getGlobal()));
            clone.getTypeData().addElement(newTypeData);
//          HCanedo_17112005_begin
            newTypeData.setStructureTestData(clone);
//          HCanedo_17112005_end
        }
        return clone;
    }
    public Vector getTypeData(){ 
    	if(typeData == null)
    		typeData = new Vector();
    	return typeData; }

    public void setTypeData(Vector typeData){ this.typeData = typeData; }

    public String getName(){ 
    	if(name == null)
    		name = "";
    	return name; }

    public void setName(String name){ this.name =new String(name); }
    
   
    public String getType(){ 
    	if(type==null)
    		type = "";
    	return type; }    

    public void setType(String type){ this.type = new String(type); }
    
    //CCastedo begin
    public Vector getNewColumnsHeader()
		{
    	if(newColumnsHeader == null)
    		newColumnsHeader = new Vector();
		return newColumnsHeader;
		}

	public void setNewColumnsHeader(Vector newColumnsHeader)
	{
		
    	this.newColumnsHeader = newColumnsHeader; //VER
	}
	
    //CCastedo ends
	
    
//  Claudia's begin
	/*public String getToolVendorOT()
		{
		return stateNameOT;
		}

	public void setToolVendorOT(String stateNameOT)
	{
    	this.stateNameOT =  stateNameOT; //VER
	}
	
	
	
	public int getTVT()
		{
		return stateTVT;
		}

	public void setTVT(int stateTVT)
	{
    	this.stateTVT =  stateTVT; //VER
	}*/
	//Claudia's end

    public String getDescription(){ 
    	if(description == null)
    		description = "";
    	return description; }

    public void setDescription(String description){ this.description = new String(description); }

  //  private TDStructure m_TDStructure;

	 public String generateName(TDStructure m_TDStructure,UndoableEdit p_ce) {
		 CompoundEdit ce;
	    	if(p_ce!=null)
	    		ce = (CMCompoundEdit) p_ce;
	    	else
	    		ce = new CMCompoundEdit();
	    	
       int id= m_TDStructure.generateId(p_ce);
       ce.addEdit(CMModelEditFactory.INSTANCE.createChangeIDStructureTestDataModelEdit(this,id));
       this.setId(id);
       StringBuffer idString = new StringBuffer();
       idString.append(id);
      	int length = idString.length();
        for(int i = 0; i < BusinessRules.ID_LENGTH-length; i++) {
          idString.insert(0,BusinessRules.ID_FILLER_CHARACTER);
        }
        idString.insert(0,BusinessRules.STRUCTURE_PREFIX);
        return  idString.toString();
    }
     public String generateName2(TDStructure m_TDStructure,UndoableEdit p_ce) {
		 CompoundEdit ce;
	    	if(p_ce!=null)
	    		ce = (CMCompoundEdit) p_ce;
	    	else
	    		ce = new CMCompoundEdit();
       int id= m_TDStructure.getID();
       ce.addEdit(CMModelEditFactory.INSTANCE.createChangeIDStructureTestDataModelEdit(this,id));
       this.setId(id);
      StringBuffer idString = new StringBuffer();
      idString.append(id);
      int length = idString.length();
        for(int i = 0; i < BusinessRules.ID_LENGTH-length; i++) {
          idString.insert(0,BusinessRules.ID_FILLER_CHARACTER);
        }
      idString.insert(0,BusinessRules.STRUCTURE_PREFIX);
      return  idString.toString();
    }

     public String generateDescription(TDStructure m_TDStructure)
     {
		String res = BusinessRules.DESCRIPTION_STRUCTURE;
		int i=m_TDStructure.getM_StructureTestData().size();
        return res;//+" "+Integer.toString(i+1); //$NON-NLS-1$
     }

    public int getGlobalIndex(){
            return globalIndex;
        }

    public void setGlobalIndex(int globalIndex){
            this.globalIndex = globalIndex;
        }

    public int getId(){
            return id;
        }

    public void setId(int id){
            this.id = id;
        }

////
//     /**
//      * @directed
//      * @link aggregationByValue
//      * @clientCardinality 0..*
//      * @supplierCardinality 1
//      */
// private TestData lnkTestData;
    /**
	 * @param idTestData The idTestData to set.
	 */
	public void setIdTestData(int idTestData) {
		this.idTestData = idTestData;
	}
	/**
	 * @return Returns the idTestData.
	 */
	public int getIdTestData() {
		return idTestData;
	}
    public String getTestDataIdentification(){
    	if(idTestData > 0){
    		return "["+idTestData+"]";
    	}
    	else{
    		return "";
    	}
    }
    private Vector typeData;
    private String name;
    private String type;
   /* private String stateNameOT;
    private int stateTVT;*/
    private String description;
    private int globalIndex;
    private int id;
    private int idTestData=0;
    //Ccastedo
    private Vector newColumnsHeader = new Vector(5);
	
	
}
